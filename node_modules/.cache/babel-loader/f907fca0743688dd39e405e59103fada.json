{"ast":null,"code":"var _jsxFileName = \"/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  searchContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"16px\",\n    alignItems: \"center\"\n  },\n  searchInput: {\n    margin: \"0 16px\"\n  }\n};\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: {\n      username\n    }\n  } = post;\n  const toMatch = [description, location, title, username];\n\n  for (const field of toMatch) {\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const postsToDisplay = posts.filter(post => postMatches(post, searchTerm));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.searchContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.searchInput,\n        type: \"text\",\n        placeholder: \"search for posts\",\n        value: searchTerm,\n        onChange: event => {\n          console.log(event.target.value);\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), postsToDisplay.length ? postsToDisplay.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Posted by: \", post.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Description: \", post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Location: \", post.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(`/posts/${post._id}`),\n        children: \"View Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(post_id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"Pi8pI0TMiAPYDWrmvrKP6jGRPKY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/Posts.js"],"names":["React","useState","useHistory","styles","searchContainer","display","justifyContent","padding","alignItems","searchInput","margin","postMatches","post","searchTerm","searchTermLower","toLowerCase","description","location","title","author","username","toMatch","field","includes","Posts","posts","history","setSearchTerm","postsToDisplay","filter","event","console","log","target","value","length","map","border","push","_id","post_id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = {\n  searchContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"16px\",\n    alignItems: \"center\",\n  },\n  searchInput: {\n    margin: \"0 16px\",\n  },\n};\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username },\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (const field of toMatch) {\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts }) => {\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n  return (\n    <>\n      <div style={styles.searchContainer}>\n        <h2>Posts</h2>\n        <input\n          style={styles.searchInput}\n          type=\"text\"\n          placeholder=\"search for posts\"\n          value={searchTerm}\n          onChange={(event) => {\n            console.log(event.target.value);\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div key={post._id} style={{ border: \"1px solid black\" }}>\n            <h5>{post.title}</h5>\n            <div>Posted by: {post.author.username}</div>\n            <div>Description: {post.description}</div>\n            <div>Location: {post.location}</div>\n            <button onClick={() => history.push(`/posts/${post._id}`)}>\n              View Post\n            </button>\n            <button onClick={() => console.log(post_id)}></button>\n          </div>\n        ))\n      ) : (\n        <div>No posts to display</div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}