{"ast":null,"code":"var _jsxFileName = \"/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_ROOT = `https://strangers-things.herokuapp.com/api/2108-LSU-RM-WEB-PT/users/register`;\nconst API_REGISTER = `${API_ROOT}register`;\nconst API_LOGIN = `${API_ROOT}login`;\n\nconst AccountForm = _ref => {\n  _s();\n\n  let {\n    action\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = action == \"login\";\n  const title = isLogin ? \"Login\" : \"Register\";\n  const oppositeTittle = isLogin ? \"Register\" : \"Login\";\n  const oppositeAction = isLogin ? \"register\" : \"login\";\n  const actionURL = isLogin ? API_LOGIN : API_REGISTER;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(`user name: ${username}`);\n    console.log(`password: ${password}`);\n\n    try {\n      const response = await fetch(actionURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      });\n      const {\n        data\n      } = await response.json(); // console.log(data);\n\n      const token = data.token;\n      console.log(token);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [\" \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${oppositeAction}`,\n      children: oppositeTittle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/AccountForm.js"],"names":["React","useState","Link","API_ROOT","API_REGISTER","API_LOGIN","AccountForm","action","username","setUsername","password","setPassword","isLogin","title","oppositeTittle","oppositeAction","actionURL","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","user","data","json","token","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst API_ROOT = `https://strangers-things.herokuapp.com/api/2108-LSU-RM-WEB-PT/users/register`;\nconst API_REGISTER = `${API_ROOT}register`;\nconst API_LOGIN = `${API_ROOT}login`;\n\nconst AccountForm = ({ action }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = action == \"login\";\n  const title = isLogin ? \"Login\" : \"Register\";\n  const oppositeTittle = isLogin ? \"Register\" : \"Login\";\n  const oppositeAction = isLogin ? \"register\" : \"login\";\n  const actionURL = isLogin ? API_LOGIN : API_REGISTER;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(`user name: ${username}`);\n    console.log(`password: ${password}`);\n    try {\n      const response = await fetch(actionURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n          },\n        }),\n      });\n\n      const { data } = await response.json();\n      // console.log(data);\n      const token = data.token;\n      console.log(token);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <h4>{title}</h4>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\"> {title}</button>\n      </form>\n      <Link to={`${oppositeAction}`}>{oppositeTittle}</Link>\n    </>\n  );\n};\n\nexport default AccountForm;\n"]},"metadata":{},"sourceType":"module"}