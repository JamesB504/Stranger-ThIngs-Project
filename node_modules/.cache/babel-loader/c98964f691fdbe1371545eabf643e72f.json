{"ast":null,"code":"var _jsxFileName = \"/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { callApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountForm = _ref => {\n  _s();\n\n  let {\n    action,\n    setToken,\n    setUserData\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = action === \"login\";\n  const title = isLogin ? \"Login\" : \"Register\";\n  const oppositeTitle = isLogin ? \"Register\" : \"Login\";\n  const oppositeAction = isLogin ? \"register\" : \"login\";\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    var _data$data;\n\n    event.preventDefault();\n    const data = await callApi({\n      url: `/users/${action}`,\n      body: {\n        user: {\n          username,\n          password\n        }\n      },\n      method: \"POST\"\n    });\n    const token = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.token;\n\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      setUsername(\"\");\n      setPassword(\"\");\n      setToken(token);\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${oppositeAction}`,\n      children: oppositeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"/nE+1o6xRAtcM7F1DwdqQmRYBrw=\", false, function () {\n  return [useHistory];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/AccountForm.js"],"names":["React","useState","Link","useHistory","callApi","AccountForm","action","setToken","setUserData","username","setUsername","password","setPassword","isLogin","title","oppositeTitle","oppositeAction","history","handleSubmit","event","preventDefault","data","url","body","user","method","token","localStorage","setItem","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,QAAxB;;;;AAEA,MAAMC,WAAW,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAsC;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,OAAO,GAAGP,MAAM,KAAK,OAA3B;AACA,QAAMQ,KAAK,GAAGD,OAAO,GAAG,OAAH,GAAa,UAAlC;AACA,QAAME,aAAa,GAAGF,OAAO,GAAG,UAAH,GAAgB,OAA7C;AACA,QAAMG,cAAc,GAAGH,OAAO,GAAG,UAAH,GAAgB,OAA9C;AACA,QAAMI,OAAO,GAAGd,UAAU,EAA1B;;AAEA,QAAMe,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAAA;;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAG,MAAMjB,OAAO,CAAC;AACzBkB,MAAAA,GAAG,EAAG,UAAShB,MAAO,EADG;AAEzBiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAEf,UAAAA,QAAF;AAAYE,UAAAA;AAAZ;AAAR,OAFmB;AAGzBc,MAAAA,MAAM,EAAE;AAHiB,KAAD,CAA1B;AAKA,UAAMC,KAAK,GAAGL,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYK,KAA1B;;AAEA,QAAIA,KAAJ,EAAW;AACTC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAhB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAL,MAAAA,QAAQ,CAACmB,KAAD,CAAR;AACAT,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;AACF,GAhBD;;AAiBA,sBACE;AAAA,4BACE;AAAA,gBAAKf;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAET,QAHT;AAIE,QAAA,QAAQ,EAAGU,KAAD,IAAWT,WAAW,CAACS,KAAK,CAACW,MAAN,CAAaC,KAAd;AAJlC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAEpB,QAHT;AAIE,QAAA,QAAQ,EAAGQ,KAAD,IAAWP,WAAW,CAACO,KAAK,CAACW,MAAN,CAAaC,KAAd;AAJlC;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuBjB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAEE,cAAe,EAA5B;AAAA,gBAAgCD;AAAhC;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AAqBD,CA/CD;;GAAMV,W;UAOYF,U;;;KAPZE,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { callApi } from \"../api\";\n\nconst AccountForm = ({ action, setToken, setUserData }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = action === \"login\";\n  const title = isLogin ? \"Login\" : \"Register\";\n  const oppositeTitle = isLogin ? \"Register\" : \"Login\";\n  const oppositeAction = isLogin ? \"register\" : \"login\";\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = await callApi({\n      url: `/users/${action}`,\n      body: { user: { username, password } },\n      method: \"POST\",\n    });\n    const token = data?.data?.token;\n\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      setUsername(\"\");\n      setPassword(\"\");\n      setToken(token);\n      history.push(\"/\");\n    }\n  };\n  return (\n    <>\n      <h4>{title}</h4>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">{title}</button>\n      </form>\n      <Link to={`${oppositeAction}`}>{oppositeTitle}</Link>\n    </>\n  );\n};\n\nexport default AccountForm;\n"]},"metadata":{},"sourceType":"module"}