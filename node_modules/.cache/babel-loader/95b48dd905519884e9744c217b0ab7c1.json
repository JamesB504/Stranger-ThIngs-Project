{"ast":null,"code":"import _slicedToArray from\"/Users/jamesbarnes/Desktop/course_work/Stranger_Things/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var styles={searchContainer:{display:\"flex\",justifyContent:\"center\",padding:\"16px\",alignItems:\"center\"},searchInput:{margin:\"0 16px\"}};var postMatches=function postMatches(post,searchTerm){var searchTermLower=searchTerm.toLowerCase();var description=post.description,location=post.location,title=post.title,username=post.author.username;var toMatch=[description,location,title,username];for(var _i=0,_toMatch=toMatch;_i<_toMatch.length;_i++){var field=_toMatch[_i];if(field.toLowerCase().includes(searchTermLower)){return true;}}};var Posts=function Posts(_ref){var posts=_ref.posts;var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var postsToDisplay=posts.filter(function(post){return postMatches(post,searchTerm);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:styles.searchContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Posts\"}),/*#__PURE__*/_jsx(\"input\",{style:styles.searchInput,type:\"text\",placeholder:\"search for posts\",value:searchTerm,onChange:function onChange(event){console.log(event.target.value);setSearchTerm(event.target.value);}})]}),postsToDisplay.length?postsToDisplay.map(function(post){return/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid black\"},children:[/*#__PURE__*/_jsx(\"h5\",{children:post.title}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Posted by: \",post.author.username]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Description: \",post.description]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Location: \",post.location]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return history.push(\"/posts/\".concat(post._id));},children:\"View Post\"})]},post._id);}):/*#__PURE__*/_jsx(\"div\",{children:\"No posts to display\"})]});};export default Posts;","map":{"version":3,"sources":["/Users/jamesbarnes/Desktop/course_work/Stranger_Things/src/components/Posts.js"],"names":["React","useState","useHistory","styles","searchContainer","display","justifyContent","padding","alignItems","searchInput","margin","postMatches","post","searchTerm","searchTermLower","toLowerCase","description","location","title","username","author","toMatch","field","includes","Posts","posts","history","setSearchTerm","postsToDisplay","filter","event","console","log","target","value","length","map","border","push","_id"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,6IAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,eAAe,CAAE,CACfC,OAAO,CAAE,MADM,CAEfC,cAAc,CAAE,QAFD,CAGfC,OAAO,CAAE,MAHM,CAIfC,UAAU,CAAE,QAJG,CADJ,CAObC,WAAW,CAAE,CACXC,MAAM,CAAE,QADG,CAPA,CAAf,CAYA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAOC,UAAP,CAAsB,CACxC,GAAMC,CAAAA,eAAe,CAAGD,UAAU,CAACE,WAAX,EAAxB,CACA,GACEC,CAAAA,WADF,CAKIJ,IALJ,CACEI,WADF,CAEEC,QAFF,CAKIL,IALJ,CAEEK,QAFF,CAGEC,KAHF,CAKIN,IALJ,CAGEM,KAHF,CAIYC,QAJZ,CAKIP,IALJ,CAIEQ,MAJF,CAIYD,QAJZ,CAOA,GAAME,CAAAA,OAAO,CAAG,CAACL,WAAD,CAAcC,QAAd,CAAwBC,KAAxB,CAA+BC,QAA/B,CAAhB,CAEA,sBAAoBE,OAApB,yBAA6B,CAAxB,GAAMC,CAAAA,KAAK,aAAX,CACH,GAAIA,KAAK,CAACP,WAAN,GAAoBQ,QAApB,CAA6BT,eAA7B,CAAJ,CAAmD,CACjD,MAAO,KAAP,CACD,CACF,CACF,CAhBD,CAkBA,GAAMU,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC3B,GAAMC,CAAAA,OAAO,CAAGxB,UAAU,EAA1B,CACA,cAAoCD,QAAQ,CAAC,EAAD,CAA5C,wCAAOY,UAAP,eAAmBc,aAAnB,eAEA,GAAMC,CAAAA,cAAc,CAAGH,KAAK,CAACI,MAAN,CAAa,SAACjB,IAAD,QAAUD,CAAAA,WAAW,CAACC,IAAD,CAAOC,UAAP,CAArB,EAAb,CAAvB,CACA,mBACE,wCACE,aAAK,KAAK,CAAEV,MAAM,CAACC,eAAnB,wBACE,6BADF,cAEE,cACE,KAAK,CAAED,MAAM,CAACM,WADhB,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,kBAHd,CAIE,KAAK,CAAEI,UAJT,CAKE,QAAQ,CAAE,kBAACiB,KAAD,CAAW,CACnBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EACAP,aAAa,CAACG,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAb,CACD,CARH,EAFF,GADF,CAcGN,cAAc,CAACO,MAAf,CACCP,cAAc,CAACQ,GAAf,CAAmB,SAACxB,IAAD,qBACjB,aAAoB,KAAK,CAAE,CAAEyB,MAAM,CAAE,iBAAV,CAA3B,wBACE,oBAAKzB,IAAI,CAACM,KAAV,EADF,cAEE,qCAAiBN,IAAI,CAACQ,MAAL,CAAYD,QAA7B,GAFF,cAGE,uCAAmBP,IAAI,CAACI,WAAxB,GAHF,cAIE,oCAAgBJ,IAAI,CAACK,QAArB,GAJF,cAKE,eAAQ,OAAO,CAAE,yBAAMS,CAAAA,OAAO,CAACY,IAAR,kBAAuB1B,IAAI,CAAC2B,GAA5B,EAAN,EAAjB,uBALF,GAAU3B,IAAI,CAAC2B,GAAf,CADiB,EAAnB,CADD,cAaC,4CA3BJ,GADF,CAgCD,CArCD,CAuCA,cAAef,CAAAA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = {\n  searchContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"16px\",\n    alignItems: \"center\",\n  },\n  searchInput: {\n    margin: \"0 16px\",\n  },\n};\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username },\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (const field of toMatch) {\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts }) => {\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n  return (\n    <>\n      <div style={styles.searchContainer}>\n        <h2>Posts</h2>\n        <input\n          style={styles.searchInput}\n          type=\"text\"\n          placeholder=\"search for posts\"\n          value={searchTerm}\n          onChange={(event) => {\n            console.log(event.target.value);\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div key={post._id} style={{ border: \"1px solid black\" }}>\n            <h5>{post.title}</h5>\n            <div>Posted by: {post.author.username}</div>\n            <div>Description: {post.description}</div>\n            <div>Location: {post.location}</div>\n            <button onClick={() => history.push(`/posts/${post._id}`)}>\n              View Post\n            </button>\n          </div>\n        ))\n      ) : (\n        <div>No posts to display</div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}