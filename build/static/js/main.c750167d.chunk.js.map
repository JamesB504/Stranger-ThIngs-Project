{"version":3,"sources":["api/index.js","components/AccountForm.js","components/Posts.js","components/SinglePost.js","components/NewPostForm.js","index.js"],"names":["API_URL","BASE_URL","callApi","a","url","method","token","body","options","toUpperCase","headers","JSON","stringify","console","log","fetch","response","json","data","error","AccountForm","action","setToken","setUserData","useState","username","setUsername","password","setPassword","isLogin","title","oppositeTitle","oppositeAction","history","useHistory","handleSubmit","event","preventDefault","user","localStorage","setItem","push","onSubmit","type","placeholder","required","onChange","target","value","to","styles","searchContainer","display","justifyContent","padding","alignItems","searchInput","margin","Posts","posts","searchTerm","setSearchTerm","postsToDisplay","filter","post","searchTermLower","toLowerCase","description","location","author","includes","postMatches","style","length","map","border","onClick","_id","SinglePost","postId","useParams","find","price","willDeliver","NewPostForm","setPosts","newPost","setNewPost","isEdit","filteredPosts","handlePostFieldChange","property","checked","App","userData","fetchUserData","fetchPosts","useEffect","getItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c750167d.chunk.js","sourcesContent":["export const BASE_URL = \"https://strangers-things.herokuapp.com/api/\";\nexport const COHORT_NAME = \"2108-LSU-RM-WEB-PT\";\nexport const API_URL = BASE_URL + COHORT_NAME;\n\nexport const callApi = async ({ url, method, token, body }) => {\n  //console.log('callApi: ', { url, method, token, body });\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n    if (token) {\n      options.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    console.log(\"Call API Request URL: \", API_URL + url);\n    console.log(\"Call API Options: \", options);\n    const response = await fetch(API_URL + url, options);\n    const data = await response.json();\n    console.log(\"data: \", data);\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error(\"ERROR: \", error);\n  }\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { callApi } from \"../api\";\n\nconst AccountForm = ({ action, setToken, setUserData }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = action === \"login\";\n  const title = isLogin ? \"Login\" : \"Register\";\n  const oppositeTitle = isLogin ? \"Register\" : \"Login\";\n  const oppositeAction = isLogin ? \"register\" : \"login\";\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = await callApi({\n      url: `/users/${action}`,\n      body: { user: { username, password } },\n      method: \"POST\",\n    });\n    const token = data?.data?.token;\n\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      setUsername(\"\");\n      setPassword(\"\");\n      setToken(token);\n      history.push(\"/\");\n    }\n  };\n  return (\n    <>\n      <h2>{title}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          required\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">{title}</button>\n      </form>\n      <Link to={`/${oppositeAction}`}>{oppositeTitle}</Link>\n    </>\n  );\n};\n\nexport default AccountForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = {\n  searchContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"16px\",\n    alignItems: \"center\",\n  },\n  searchInput: {\n    margin: \"0 16px\",\n  },\n};\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username },\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (const field of toMatch) {\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts }) => {\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n  return (\n    <>\n      <div style={styles.searchContainer}>\n        <h2>Posts</h2>\n        <input\n          style={styles.searchInput}\n          type=\"text\"\n          placeholder=\"search for posts\"\n          value={searchTerm}\n          onChange={(event) => {\n            console.log(event.target.value);\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div key={post._id} style={{ border: \"1px solid black\" }}>\n            <h5>{post.title}</h5>\n            <div>Posted by: {post.author.username}</div>\n            <div>Description: {post.description}</div>\n            <div>Location: {post.location}</div>\n            <button onClick={() => history.push(`/posts/${post._id}`)}>\n              View Post\n            </button>\n          </div>\n        ))\n      ) : (\n        <div>No posts to display</div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst SinglePost = ({ posts }) => {\n  const { postId } = useParams();\n  const post = posts.find((post) => postId === post._id);\n  console.log(\"SINGLE POST\", post);\n  return (\n    <>\n      {post ? (\n        <div>\n          <h3>{post.title}</h3>\n          <p>Posted by: {post.author.username}</p>\n          <p>Price: {post.price}</p>\n          <p>Location: {post.location}</p>\n          <p>Delivers: {post.willDeliver ? \"Yes\" : \"No\"}</p>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default SinglePost;\n","import React, { useState } from \"react\";\nimport { callApi } from \"../api\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst NewPostForm = ({ token, setPosts, posts, action }) => {\n  const history = useHistory();\n  const { postId } = useParams();\n\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    description: \"\",\n    price: 0,\n    location: \"\",\n    willDeliver: false,\n  });\n  const isEdit = action === \"edit\";\n  const title = isEdit ? \"Edit this post\" : \"Add a new post\";\n  const method = isEdit ? \"PATCH\" : \"POST\";\n  const API_URL = isEdit ? `/posts/${postId}` : `/posts`;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const {\n        data: { post },\n      } = await callApi({\n        url: API_URL,\n        method: method,\n        body: {\n          post: {\n            title: newPost.title,\n            description: newPost.description,\n            price: newPost.price,\n            location: newPost.location,\n            willDeliver: newPost.willDeliver,\n          },\n        },\n        token,\n      });\n\n      if (isEdit) {\n        //* grab existing posts other than the one ive edited\n        //* add in the post ive edited\n        const filteredPosts = posts.filter((post) => post._id !== postId);\n        setPosts([...filteredPosts, post]);\n      } else {\n        //* Otherwise I am creating a post, so just take my old posts and add this new one to the bottom of the list\n        setPosts([...posts, post]);\n      }\n      //* No matter what send users to the /posts page when we are done\n      history.push(\"/posts\");\n    } catch (error) {\n      console.error(\"error adding a post: \", error);\n    }\n  };\n\n  const handlePostFieldChange = (property) => (event) => {\n    if (property === \"willDeliver\") {\n      setNewPost({ ...newPost, [property]: event.target.checked });\n    } else {\n      setNewPost({ ...newPost, [property]: event.target.value });\n    }\n  };\n\n  return (\n    <>\n      <h2>{title}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"title\"\n          onChange={handlePostFieldChange(\"title\")}\n          value={newPost.title}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"description\"\n          onChange={handlePostFieldChange(\"description\")}\n          value={newPost.description}\n        ></input>\n        <input\n          type=\"number\"\n          placeholder=\"price\"\n          onChange={handlePostFieldChange(\"price\")}\n          value={newPost.price}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"location\"\n          onChange={handlePostFieldChange(\"location\")}\n          value={newPost.location}\n        ></input>\n        <label>\n          Deliver ?\n          <input\n            type=\"checkbox\"\n            onChange={handlePostFieldChange(\"willDeliver\")}\n            value={newPost.willDeliver}\n          ></input>\n        </label>\n        <button>{title}</button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPostForm;\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { callApi } from \"./api\";\nimport { AccountForm, Posts, SinglePost, NewPostForm } from \"./components\";\n\nconst App = () => {\n  const [token, setToken] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  const fetchUserData = async (token) => {\n    const { data } = await callApi({\n      url: \"/users/me\",\n      token,\n    });\n    return data;\n  };\n\n  const fetchPosts = async () => {\n    const {\n      data: { posts },\n    } = await callApi({\n      url: \"/posts\",\n    });\n    return posts;\n  };\n\n  useEffect(async () => {\n    // const posts = await fetchPosts();\n    // setPosts(posts);\n    if (!token) {\n      setToken(localStorage.getItem(\"token\"));\n      return;\n    }\n    const data = await fetchUserData(token);\n    if (data && data.username) {\n      setUserData(data);\n    }\n  }, [token]);\n\n  useEffect(async () => {\n    const posts = await fetchPosts();\n    setPosts(posts);\n  }, []);\n\n  return (\n    <>\n      <h1>Stranger's Things</h1>\n      <Link to=\"/posts/new\">Add A Post</Link>\n      <Switch>\n        <Route exact path=\"/\">\n          {userData.username && <div>Hello {userData.username}</div>}\n        </Route>\n        <Route exact path=\"/posts\">\n          <Posts posts={posts} />\n        </Route>\n        <Route path=\"/posts/new\">\n          <NewPostForm\n            token={token}\n            setPosts={setPosts}\n            posts={posts}\n            action=\"add\"\n          />\n        </Route>\n        <Route path=\"/posts/:postId/edit\">\n          <NewPostForm\n            token={token}\n            setPosts={setPosts}\n            posts={posts}\n            action=\"edit\"\n          />\n        </Route>\n        <Route path=\"/posts/:postId\">\n          <SinglePost posts={posts} />\n        </Route>\n        <Route path=\"/register\">\n          <AccountForm\n            action=\"register\"\n            setToken={setToken}\n            setUserData={setUserData}\n          />\n        </Route>\n        <Route path=\"/login\">\n          <AccountForm\n            action=\"login\"\n            setToken={setToken}\n            setUserData={setUserData}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}